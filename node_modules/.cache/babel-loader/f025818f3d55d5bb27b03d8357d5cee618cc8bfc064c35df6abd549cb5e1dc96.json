{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//Compo\nimport AssignmentAddingFeature from '@/components/AssignmentsComponents/AssignmentAddingFeature.vue';\nimport AssignmentUpdatingFeature from '@/components/AssignmentsComponents/AssignmentUpdatingFeature.vue';\nimport AssignmentDeletingFeature from '@/components/AssignmentsComponents/AssignmentDeletingFeature.vue';\n//Mixins\nimport Mixin from '@/mixins/mixin';\nexport default {\n  mixins: [Mixin],\n  components: {\n    AssignmentAddingFeature,\n    AssignmentUpdatingFeature,\n    AssignmentDeletingFeature\n  },\n  mixins: [mixin],\n  data() {\n    return {\n      assignmentItems: JSON.parse(localStorage.getItem('assignmentItems')) || [],\n      taskItems: JSON.parse(localStorage.getItem('taskItems')) || [],\n      employeeItems: JSON.parse(localStorage.getItem('employeeItems')) || []\n    };\n  },\n  created() {\n    // Let's use the function provided by the mixin.\n    console.log(`${this.currentUser.name} has currently logged into the assignment page.`);\n  },\n  watch: {\n    assignmentItems() {\n      localStorage.setItem('assignmentItems', JSON.stringify(this.assignmentItems));\n    }\n  },\n  computed: {\n    assignmentsExisted() {\n      if ((JSON.parse(localStorage.getItem('assignmentItems')) || []).length == 0) return false;else return true;\n    }\n  },\n  methods: {\n    reloadPage() {\n      window.location.reload();\n    },\n    addTask($event) {\n      this.assignmentItems.push({\n        id: this.assignmentItems.length + 1,\n        ...$event\n      });\n      if (this.assignmentItems.length == 1) this.reloadPage();\n    },\n    updateAssignment($event) {\n      console.log({\n        ...$event\n      });\n      if ({\n        ...$event\n      }.id - 1 < this.assignmentItems.length && {\n        ...$event\n      }.id - 1 >= 0) {\n        if ({\n          ...$event\n        }.responsible != \"\") this.assignmentItems[{\n          ...$event\n        }.id - 1].responsible = {\n          ...$event\n        }.responsible;\n        if ({\n          ...$event\n        }.tasks != \"\") this.assignmentItems[{\n          ...$event\n        }.id - 1].tasks = {\n          ...$event\n        }.tasks;\n        if ({\n          ...$event\n        }.employees != \"\") this.assignmentItems[{\n          ...$event\n        }.id - 1].employees = {\n          ...$event\n        }.employees;\n        localStorage.setItem('assignmentItems', JSON.stringify(this.assignmentItems));\n      } else {\n        alert(\"you entered a bad id\");\n      }\n    },\n    deleteAssignment($event) {\n      if ({\n        ...$event\n      }.id < this.assignmentItems.length && {\n        ...$event\n      }.id >= 0) {\n        this.assignmentItems = this.assignmentItems.slice(0, {\n          ...$event\n        }.id).concat(this.assignmentItems.slice({\n          ...$event\n        }.id + 1, this.assignmentItems.length));\n        this.assignmentItems.filter(el => el.id > {\n          ...$event\n        }.id).map(el => el.id--);\n        localStorage.setItem('assignmentItems', JSON.stringify(this.assignmentItems));\n        if ({\n          ...$event\n        }.id == 0) this.reloadPage();\n      } else {\n        alert(\"you entered a bad id\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["AssignmentAddingFeature","AssignmentUpdatingFeature","AssignmentDeletingFeature","Mixin","mixins","components","mixin","data","assignmentItems","JSON","parse","localStorage","getItem","taskItems","employeeItems","created","console","log","currentUser","name","watch","setItem","stringify","computed","assignmentsExisted","length","methods","reloadPage","window","location","reload","addTask","$event","push","id","updateAssignment","responsible","tasks","employees","alert","deleteAssignment","slice","concat","filter","el","map"],"sources":["src/views/Assignments/AssignmentPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Adding the adding items component to the page  -->\r\n    <!-- إضافة المكون * إضافة العناصر * إلى الصفحة  -->\r\n    <assignment-adding-feature\r\n      :taskItems=\"taskItems\"\r\n      :employeeItems=\"employeeItems\"\r\n      @addingAssignment=\"addTask\"\r\n    >\r\n    </assignment-adding-feature>\r\n    <br />\r\n\r\n    <!-- Adding the updating items component to the page  -->\r\n    <!-- إضافة المكون * تعديل العناصر * إلى الصفحة  -->\r\n    <assignment-updating-feature\r\n      :taskItems=\"taskItems\"\r\n      :employeeItems=\"employeeItems\"\r\n      v-if=\"assignmentsExisted\"\r\n      @updatingAssignment=\"updateAssignment\"\r\n    >\r\n    </assignment-updating-feature>\r\n   <br/>\r\n   <assignment-deleting-feature\r\n   v-if=\"assignmentsExisted\"\r\n   @deletingAssignment=\"deleteAssignment\">\r\n   </assignment-deleting-feature>\r\n    <!-- Adding the items list component to the page  -->\r\n    <!-- إضافة المكون * جدول العناصر * إلى الصفحة  -->\r\n    <data-table :itemsList=\"assignmentItems\"> </data-table>\r\n  </div>\r\n</template>\r\n<script lang=\"js\">\r\n//Compo\r\nimport AssignmentAddingFeature from '@/components/AssignmentsComponents/AssignmentAddingFeature.vue';\r\nimport AssignmentUpdatingFeature from '@/components/AssignmentsComponents/AssignmentUpdatingFeature.vue';\r\nimport AssignmentDeletingFeature from '@/components/AssignmentsComponents/AssignmentDeletingFeature.vue';\r\n//Mixins\r\nimport Mixin from '@/mixins/mixin'\r\nexport default {\r\n  mixins:[Mixin],\r\n    components:{\r\n        AssignmentAddingFeature,AssignmentUpdatingFeature,AssignmentDeletingFeature\r\n    },\r\n    mixins: [ mixin ],\r\n    data(){return {\r\n       assignmentItems:JSON.parse(localStorage.getItem('assignmentItems'))||[],\r\n       taskItems:JSON.parse(localStorage.getItem('taskItems'))||[],\r\n       employeeItems:JSON.parse(localStorage.getItem('employeeItems'))||[]\r\n    }},\r\n    created() {\r\n    // Let's use the function provided by the mixin.\r\n    console.log(`${this.currentUser.name} has currently logged into the assignment page.`);\r\n   },\r\n    watch:{\r\n      assignmentItems(){\r\n            localStorage.setItem('assignmentItems',JSON.stringify(this.assignmentItems))\r\n         }\r\n    },\r\n    computed:{\r\n      assignmentsExisted()\r\n    {\r\n      if((JSON.parse(localStorage.getItem('assignmentItems'))||[]).length==0) return false;\r\n    else return true;\r\n  },\r\n},\r\n    methods:{\r\n      reloadPage()\r\n    {\r\n      window.location.reload()\r\n    },\r\n    addTask($event)\r\n      {\r\n        this.assignmentItems.push({ id: this.assignmentItems.length + 1, ...$event });\r\n        if(this.assignmentItems.length==1)\r\n            this.reloadPage();\r\n      },\r\n        updateAssignment($event){\r\n          console.log({...$event})\r\n          if((({...$event}.id-1)<this.assignmentItems.length)&&(({...$event}.id-1)>=0 ))\r\n        {\r\n          if ({...$event}.responsible!=\"\")\r\n            this.assignmentItems[{...$event}.id-1].responsible={...$event}.responsible;\r\n          if ({...$event}.tasks!=\"\")\r\n            this.assignmentItems[{...$event}.id-1].tasks={...$event}.tasks;\r\n          if ({...$event}.employees!=\"\")\r\n            this.assignmentItems[{...$event}.id-1].employees={...$event}.employees;\r\n          localStorage.setItem('assignmentItems',JSON.stringify(this.assignmentItems));\r\n        }\r\n        else\r\n        {\r\n          alert(\"you entered a bad id\")\r\n        }\r\n    },\r\n    deleteAssignment($event)\r\n    {\r\n        if((({...$event}.id)<this.assignmentItems.length)&&(({...$event}.id)>=0 ))\r\n          {\r\n            this.assignmentItems=this.assignmentItems.slice(0,{...$event}.id).\r\n            concat(this.assignmentItems.slice({...$event}.id+1,this.assignmentItems.length));\r\n            this.assignmentItems.filter((el) => el.id>{...$event}.id).map((el) => el.id--);\r\n            localStorage.setItem('assignmentItems',JSON.stringify(this.assignmentItems));\r\n            if({...$event}.id==0)\r\n            this.reloadPage();\r\n          }\r\n        else\r\n          {\r\n            alert(\"you entered a bad id\")\r\n          }\r\n        }\r\n    }\r\n}\r\n</script>\r\n"],"mappings":";AAgCA;AACA,OAAAA,uBAAA;AACA,OAAAC,yBAAA;AACA,OAAAC,yBAAA;AACA;AACA,OAAAC,KAAA;AACA;EACAC,MAAA,GAAAD,KAAA;EACAE,UAAA;IACAL,uBAAA;IAAAC,yBAAA;IAAAC;EACA;EACAE,MAAA,GAAAE,KAAA;EACAC,KAAA;IAAA;MACAC,eAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,SAAA,EAAAJ,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAE,aAAA,EAAAL,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EAAA;EACAG,QAAA;IACA;IACAC,OAAA,CAAAC,GAAA,SAAAC,WAAA,CAAAC,IAAA;EACA;EACAC,KAAA;IACAZ,gBAAA;MACAG,YAAA,CAAAU,OAAA,oBAAAZ,IAAA,CAAAa,SAAA,MAAAd,eAAA;IACA;EACA;EACAe,QAAA;IACAC,mBAAA,EACA;MACA,KAAAf,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,4BAAAa,MAAA,yBACA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,EACA;MACAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;IACA;IACAC,QAAAC,MAAA,EACA;MACA,KAAAxB,eAAA,CAAAyB,IAAA;QAAAC,EAAA,OAAA1B,eAAA,CAAAiB,MAAA;QAAA,GAAAO;MAAA;MACA,SAAAxB,eAAA,CAAAiB,MAAA,OACA,KAAAE,UAAA;IACA;IACAQ,iBAAAH,MAAA;MACAhB,OAAA,CAAAC,GAAA;QAAA,GAAAe;MAAA;MACA;QAAA,GAAAA;MAAA,EAAAE,EAAA,YAAA1B,eAAA,CAAAiB,MAAA;QAAA,GAAAO;MAAA,EAAAE,EAAA,WACA;QACA;UAAA,GAAAF;QAAA,EAAAI,WAAA,QACA,KAAA5B,eAAA;UAAA,GAAAwB;QAAA,EAAAE,EAAA,MAAAE,WAAA;UAAA,GAAAJ;QAAA,EAAAI,WAAA;QACA;UAAA,GAAAJ;QAAA,EAAAK,KAAA,QACA,KAAA7B,eAAA;UAAA,GAAAwB;QAAA,EAAAE,EAAA,MAAAG,KAAA;UAAA,GAAAL;QAAA,EAAAK,KAAA;QACA;UAAA,GAAAL;QAAA,EAAAM,SAAA,QACA,KAAA9B,eAAA;UAAA,GAAAwB;QAAA,EAAAE,EAAA,MAAAI,SAAA;UAAA,GAAAN;QAAA,EAAAM,SAAA;QACA3B,YAAA,CAAAU,OAAA,oBAAAZ,IAAA,CAAAa,SAAA,MAAAd,eAAA;MACA,OAEA;QACA+B,KAAA;MACA;IACA;IACAC,iBAAAR,MAAA,EACA;MACA;QAAA,GAAAA;MAAA,EAAAE,EAAA,QAAA1B,eAAA,CAAAiB,MAAA;QAAA,GAAAO;MAAA,EAAAE,EAAA,OACA;QACA,KAAA1B,eAAA,QAAAA,eAAA,CAAAiC,KAAA;UAAA,GAAAT;QAAA,EAAAE,EAAA,EACAQ,MAAA,MAAAlC,eAAA,CAAAiC,KAAA;UAAA,GAAAT;QAAA,EAAAE,EAAA,WAAA1B,eAAA,CAAAiB,MAAA;QACA,KAAAjB,eAAA,CAAAmC,MAAA,CAAAC,EAAA,IAAAA,EAAA,CAAAV,EAAA;UAAA,GAAAF;QAAA,EAAAE,EAAA,EAAAW,GAAA,CAAAD,EAAA,IAAAA,EAAA,CAAAV,EAAA;QACAvB,YAAA,CAAAU,OAAA,oBAAAZ,IAAA,CAAAa,SAAA,MAAAd,eAAA;QACA;UAAA,GAAAwB;QAAA,EAAAE,EAAA,OACA,KAAAP,UAAA;MACA,OAEA;QACAY,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}