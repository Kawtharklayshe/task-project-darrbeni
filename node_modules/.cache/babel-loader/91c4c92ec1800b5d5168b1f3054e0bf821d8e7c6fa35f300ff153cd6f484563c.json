{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst tasksModule = {\n  state: {\n    historyItems: JSON.parse(localStorage.getItem('historyItems')) || [],\n    taskItems: JSON.parse(localStorage.getItem('taskItems')) || [],\n    tasksExisted: (JSON.parse(localStorage.getItem('taskItems')) || []).length == 0 ? false : true\n  },\n  getters: {\n    tasksExisted(state) {\n      return state.tasksExisted;\n    },\n    taskItems(state) {\n      return state.taskItems;\n    },\n    historyItems(state) {\n      return state.historyItems;\n    }\n  },\n  mutations: {\n    saveTaskToStorage(state) {\n      localStorage.setItem('taskItems', state.taskItems);\n    },\n    deleteTaskFromStorage() {},\n    updateTaskInStorage() {},\n    addTaskToLocalStorage(state, event) {\n      console.log(event);\n      console.log(\"this is event contents\");\n      state.taskItems.push({\n        id: state.taskItems.length + 1,\n        ...event\n      });\n    },\n    updateHistoryForAddingTask() {\n      state.historyItems.push({\n        id: state.historyItems.length + 1,\n        details: `You added the Task :${{\n          ...event\n        }.name}`\n      });\n    },\n    reloadPage() {\n      window.location.reload();\n    },\n    updateTask(state, event) {\n      if ({\n        ...event\n      }.id - 1 < state.taskItems.length && {\n        ...event\n      }.id - 1 >= 0) {\n        if ({\n          ...event\n        }.name != \"\") state.taskItems[{\n          ...event\n        }.id - 1].name = {\n          ...event\n        }.name;\n        if ({\n          ...event\n        }.description != \"\") state.taskItems[{\n          ...event\n        }.id - 1].description = {\n          ...event\n        }.description;\n        if ({\n          ...event\n        }.duration != \"\") state.taskItems[{\n          ...event\n        }.id - 1].duration = {\n          ...event\n        }.duration;\n        if ({\n          ...event\n        }.difficulty != \"\") state.taskItems[{\n          ...event\n        }.id - 1].difficulty = {\n          ...event\n        }.difficulty;\n        if ({\n          ...event\n        }.startDate != \"\") state.taskItems[{\n          ...event\n        }.id - 1].startDate = {\n          ...event\n        }.startDate;\n        if ({\n          ...event\n        }.endDate != \"\") state.taskItems[{\n          ...event\n        }.id - 1].endDate = {\n          ...event\n        }.endDate;\n        //updating history \n        state.historyItems.push({\n          id: state.historyItems.length + 1,\n          details: `You have updated the Task :${{\n            ...event\n          }.name}`\n        });\n        localStorage.setItem('taskItems', JSON.stringify(state.taskItems));\n      } else {\n        alert(\"you entered a bad id\");\n      }\n    },\n    deleteTask(state, event) {\n      console.log({\n        ...event\n      }.id);\n      if ({\n        ...event\n      }.id < state.taskItems.length && {\n        ...event\n      }.id >= 0) {\n        //updating history\n        state.historyItems.push({\n          id: state.historyItems.length + 1,\n          details: `You have deleted the Task :${state.taskItems[{\n            ...event\n          }.id].name} `\n        });\n        state.taskItems = state.taskItems.slice(0, {\n          ...event\n        }.id).concat(state.taskItems.slice({\n          ...event\n        }.id + 1, this.taskItems.length));\n        state.taskItems.filter(el => el.id > {\n          ...event\n        }.id).map(el => el.id--);\n        localStorage.setItem('taskItems', JSON.stringify(state.taskItems));\n        if ({\n          ...event\n        }.id == 0) this.reloadPage();\n      } else {\n        alert(\"you entered a bad id\");\n      }\n    }\n  },\n  //actions\n  actions: {\n    addTask(state, context, event) {\n      console.log(event);\n      conso;\n      //saveToLocal\n      context.commit('addTaskToLocalStorage', event);\n      //ifEmptyReload\n      if (state.taskItems.length == 1) context.commit('reloadPage');\n      //saveToStorage\n      context.commit('saveTaskToStorage');\n      //updateHistoryForAddingTask\n      context.commit('updateHistoryForAddingTask');\n    }\n  }\n};\nexport default tasksModule;","map":{"version":3,"names":["tasksModule","state","historyItems","JSON","parse","localStorage","getItem","taskItems","tasksExisted","length","getters","mutations","saveTaskToStorage","setItem","deleteTaskFromStorage","updateTaskInStorage","addTaskToLocalStorage","event","console","log","push","id","updateHistoryForAddingTask","details","name","reloadPage","window","location","reload","updateTask","description","duration","difficulty","startDate","endDate","stringify","alert","deleteTask","slice","concat","filter","el","map","actions","addTask","context","conso","commit"],"sources":["C:/Users/DELL/Desktop/FrontEndDeveloper/Vue/VueProjects/task-project-darrbeni/src/store/Modules/tasksModule.js"],"sourcesContent":["const tasksModule={\r\n    state: {\r\n      historyItems:JSON.parse(localStorage.getItem('historyItems'))||[],\r\n      taskItems:JSON.parse(localStorage.getItem('taskItems'))||[],\r\n      tasksExisted:(JSON.parse(localStorage.getItem('taskItems'))||[]).length==0 ? false:true\r\n    },\r\n    getters: {\r\n      tasksExisted(state)\r\n        {\r\n          return state.tasksExisted;\r\n        },\r\n      taskItems(state)\r\n        {\r\n          return state.taskItems;\r\n        },\r\n      historyItems(state)\r\n      {\r\n        return state.historyItems;\r\n      }\r\n    },\r\n    mutations: {\r\n      saveTaskToStorage(state){\r\n          localStorage.setItem('taskItems',state.taskItems);\r\n      },\r\n      deleteTaskFromStorage(){\r\n\r\n      },\r\n      updateTaskInStorage()\r\n      {\r\n\r\n      },\r\n      addTaskToLocalStorage(state,event){\r\n        console.log(event);\r\n        console.log(\"this is event contents\");\r\n        state.taskItems.push({ id: state.taskItems.length + 1, ...event });\r\n      },\r\n      updateHistoryForAddingTask(){\r\n        state.historyItems.push({id:state.historyItems.length+1,\r\n          details:`You added the Task :${{...event}.name}`})\r\n      },\r\n      reloadPage()\r\n      {\r\n        window.location.reload()\r\n      },\r\n        updateTask(state,event){\r\n          if((({...event}.id-1)<state.taskItems.length)&&(({...event}.id-1)>=0 ))\r\n          {\r\n            if ({...event}.name!=\"\")\r\n              state.taskItems[{...event}.id-1].name={...event}.name;\r\n            if ({...event}.description!=\"\")\r\n              state.taskItems[{...event}.id-1].description={...event}.description;\r\n            if ({...event}.duration!=\"\")\r\n              state.taskItems[{...event}.id-1].duration={...event}.duration;\r\n            if ({...event}.difficulty!=\"\")\r\n              state.taskItems[{...event}.id-1].difficulty={...event}.difficulty;\r\n            if ({...event}.startDate!=\"\")\r\n             state.taskItems[{...event}.id-1].startDate={...event}.startDate;\r\n            if ({...event}.endDate!=\"\")\r\n             state.taskItems[{...event}.id-1].endDate={ ...event }.endDate;\r\n             //updating history \r\n             state.historyItems.push({id:state.historyItems.length+1,\r\n            details:`You have updated the Task :${{...event}.name}`}) \r\n            localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\r\n           }\r\n          else\r\n          {\r\n            alert(\"you entered a bad id\")\r\n          }\r\n      },\r\n      deleteTask(state,event)\r\n      {\r\n        console.log({...event}.id);\r\n        if((({...event}.id)<state.taskItems.length)&&(({...event}.id)>=0 ))\r\n          {\r\n              //updating history\r\n          state.historyItems.push({id:state.historyItems.length+1,\r\n          details:`You have deleted the Task :${state.taskItems[{...event}.id].name} `}) \r\n            state.taskItems=state.taskItems.slice(0,{...event}.id).concat(state.taskItems.slice({...event}.id+1,this.taskItems.length));\r\n            state.taskItems.filter((el) => el.id>{...event}.id).map((el) => el.id--);\r\n            localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\r\n            if({...event}.id==0)\r\n            this.reloadPage();\r\n          }\r\n        else\r\n          {\r\n            alert(\"you entered a bad id\")\r\n          }\r\n      }\r\n    },\r\n//actions\r\n    actions: {\r\n      addTask(state,context,event)\r\n      {\r\n        console.log(event);\r\n        conso\r\n         //saveToLocal\r\n       context.commit('addTaskToLocalStorage',event);\r\n         //ifEmptyReload\r\n       if(state.taskItems.length==1)\r\n            context.commit('reloadPage');\r\n        //saveToStorage\r\n        context.commit('saveTaskToStorage');\r\n        //updateHistoryForAddingTask\r\n        context.commit('updateHistoryForAddingTask')\r\n      }\r\n    },\r\n  }\r\nexport default tasksModule\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}