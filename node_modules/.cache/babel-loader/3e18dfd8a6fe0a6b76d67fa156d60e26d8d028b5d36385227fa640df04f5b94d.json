{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { BFormGroup, BButton, BModal, BFormInput } from 'bootstrap-vue';\nexport default {\n  components: {\n    BFormGroup,\n    BButton,\n    BModal,\n    BFormInput\n  },\n  data() {\n    return {\n      showModal: false,\n      employees: [],\n      employee: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      formStates: {\n        fname: null,\n        lname: null,\n        email: null,\n        password: null\n      }\n    };\n  },\n  mounted() {\n    this.retrieveEmployeesFromLocalStorage();\n  },\n  methods: {\n    getInputState(fieldName) {\n      return this.formStates[fieldName];\n    },\n    checkFormValidity() {\n      // Form validation logic\n      // Set the formStates according to the validation result\n      let isValid = true;\n      if (this.employee.firstName.trim() === \"\") {\n        this.formStates.fname = false;\n        isValid = false;\n      } else {\n        this.formStates.fname = true;\n      }\n      if (this.employee.lastName.trim() === \"\") {\n        this.formStates.lname = false;\n        isValid = false;\n      } else {\n        this.formStates.lname = true;\n      }\n      if (this.employee.email.trim() === \"\") {\n        this.formStates.email = false;\n        isValid = false;\n      } else {\n        this.formStates.email = true;\n      }\n      if (this.employee.password.trim() === \"\") {\n        this.formStates.password = false;\n        isValid = false;\n      } else {\n        this.formStates.password = true;\n      }\n      return isValid;\n    },\n    handleSubmit() {\n      if (!this.checkFormValidity()) {\n        return;\n      }\n      // Assign a new ID to the employee\n      this.employee.id = this.employees.length + 1;\n      // Push the new employee to the employees array\n      this.employees.push({\n        ...this.employee\n      });\n      // Reset the form andclear the employee data\n      this.resetModal();\n    },\n    resetModal() {\n      this.showModal = false;\n      this.employee = {\n        id: 1,\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n      };\n      this.resetFormStates();\n    },\n    resetFormStates() {\n      this.formStates = {\n        fname: null,\n        lname: null,\n        email: null,\n        password: null\n      };\n    },\n    saveEmployeesToLocalStorage() {\n      localStorage.setItem(\"employees\", JSON.stringify(this.employees));\n    },\n    retrieveEmployeesFromLocalStorage() {\n      const savedEmployees = localStorage.getItem(\"employees\");\n      if (savedEmployees) {\n        this.employees = JSON.parse(savedEmployees);\n      }\n    }\n  }\n};","map":{"version":3,"names":["BFormGroup","BButton","BModal","BFormInput","components","data","showModal","employees","employee","firstName","lastName","email","password","formStates","fname","lname","mounted","retrieveEmployeesFromLocalStorage","methods","getInputState","fieldName","checkFormValidity","isValid","trim","handleSubmit","id","length","push","resetModal","resetFormStates","saveEmployeesToLocalStorage","localStorage","setItem","JSON","stringify","savedEmployees","getItem","parse"],"sources":["src/components/EmployeeComponents/EmployeeAddingFeature.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1></h1>\r\n    <b-button variant=\"primary\" @click=\"showModal = true\">Add Employee</b-button>   \r\n    <b-modal\r\n    id=\"modal-prevent-closing\"\r\n    ref=\"modal\"\r\n    title=\"Submit Your Name\"\r\n    @show=\"resetModal\"\r\n    @hidden=\"resetModal\"\r\n    @ok=\"handleOk\"\r\n  >\r\n    <form ref=\"form\" @submit.stop.prevent=\"handleSubmit\">\r\n      <b-form-group\r\n        label=\"Name\"\r\n        label-for=\"name-input\"\r\n        invalid-feedback=\"Name is required\"\r\n        state:=\"nameState\"\r\n      >\r\n        <b-form-input\r\n          id=\"name-input\"\r\n          v-model=\"employee.fname\"\r\n          required\r\n        ></b-form-input>\r\n      </b-form-group>\r\n    </form>\r\n  </b-modal>\r\n</div>\r\n</template>\r\n<script>\r\nimport {\r\nBFormGroup,BButton,BModal,BFormInput\r\n}\r\nfrom \r\n'bootstrap-vue';\r\nexport default {\r\n  components:{BFormGroup,BButton,BModal,BFormInput},\r\n  data(){\r\n    return{\r\n      showModal: false,\r\n      employees: [],\r\n      employee: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      formStates: {\r\n        fname: null,\r\n        lname: null,\r\n        email: null,\r\n        password: null,\r\n      }, \r\n      }\r\n    },\r\n    mounted() {\r\n    this.retrieveEmployeesFromLocalStorage();\r\n  },\r\n  methods: {\r\n    getInputState(fieldName) {\r\n      return this.formStates[fieldName];\r\n    },\r\n    checkFormValidity() {\r\n      // Form validation logic\r\n      // Set the formStates according to the validation result\r\n      let isValid = true;\r\n      if (this.employee.firstName.trim() === \"\") {\r\n        this.formStates.fname = false;\r\n        isValid = false;\r\n      } else {\r\n        this.formStates.fname = true;\r\n      }\r\n      if (this.employee.lastName.trim() === \"\") {\r\n        this.formStates.lname = false;\r\n        isValid = false;\r\n      } else {\r\n        this.formStates.lname = true;\r\n      }\r\n      if (this.employee.email.trim() === \"\") {\r\n        this.formStates.email = false;\r\n        isValid = false;\r\n      } else {\r\n        this.formStates.email = true;\r\n      }\r\n      if (this.employee.password.trim() === \"\") {\r\n        this.formStates.password = false;\r\n        isValid = false;\r\n      } else {\r\n        this.formStates.password = true;\r\n      }\r\n      return isValid;\r\n    },\r\n    handleSubmit() {\r\n      if (!this.checkFormValidity()) {\r\n        return;\r\n      }\r\n      // Assign a new ID to the employee\r\n      this.employee.id = this.employees.length + 1;\r\n      // Push the new employee to the employees array\r\n      this.employees.push({ ...this.employee });\r\n      // Reset the form andclear the employee data\r\n      this.resetModal();\r\n    },\r\n    resetModal() {\r\n      this.showModal = false;\r\n      this.employee = {\r\n        id: 1,\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      };\r\n      this.resetFormStates();\r\n    },\r\n    resetFormStates() {\r\n      this.formStates = {\r\n        fname: null,\r\n        lname: null,\r\n        email: null,\r\n        password: null,\r\n      };\r\n    },\r\n    saveEmployeesToLocalStorage() {\r\n      localStorage.setItem(\"employees\", JSON.stringify(this.employees));\r\n    },\r\n    retrieveEmployeesFromLocalStorage() {\r\n      const savedEmployees = localStorage.getItem(\"employees\");\r\n      if (savedEmployees) {\r\n        this.employees = JSON.parse(savedEmployees);\r\n      }\r\n    },\r\n  },\r\n};\r\n    \r\n</script>"],"mappings":";AA8BA,SACAA,UAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,UAAA,QAGA;AACA;EACAC,UAAA;IAAAJ,UAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC;EAAA;EACAE,KAAA;IACA;MACAC,SAAA;MACAC,SAAA;MACAC,QAAA;QACAC,SAAA;QACAC,QAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAC,KAAA;QACAC,KAAA;QACAJ,KAAA;QACAC,QAAA;MACA;IACA;EACA;EACAI,QAAA;IACA,KAAAC,iCAAA;EACA;EACAC,OAAA;IACAC,cAAAC,SAAA;MACA,YAAAP,UAAA,CAAAO,SAAA;IACA;IACAC,kBAAA;MACA;MACA;MACA,IAAAC,OAAA;MACA,SAAAd,QAAA,CAAAC,SAAA,CAAAc,IAAA;QACA,KAAAV,UAAA,CAAAC,KAAA;QACAQ,OAAA;MACA;QACA,KAAAT,UAAA,CAAAC,KAAA;MACA;MACA,SAAAN,QAAA,CAAAE,QAAA,CAAAa,IAAA;QACA,KAAAV,UAAA,CAAAE,KAAA;QACAO,OAAA;MACA;QACA,KAAAT,UAAA,CAAAE,KAAA;MACA;MACA,SAAAP,QAAA,CAAAG,KAAA,CAAAY,IAAA;QACA,KAAAV,UAAA,CAAAF,KAAA;QACAW,OAAA;MACA;QACA,KAAAT,UAAA,CAAAF,KAAA;MACA;MACA,SAAAH,QAAA,CAAAI,QAAA,CAAAW,IAAA;QACA,KAAAV,UAAA,CAAAD,QAAA;QACAU,OAAA;MACA;QACA,KAAAT,UAAA,CAAAD,QAAA;MACA;MACA,OAAAU,OAAA;IACA;IACAE,aAAA;MACA,UAAAH,iBAAA;QACA;MACA;MACA;MACA,KAAAb,QAAA,CAAAiB,EAAA,QAAAlB,SAAA,CAAAmB,MAAA;MACA;MACA,KAAAnB,SAAA,CAAAoB,IAAA;QAAA,QAAAnB;MAAA;MACA;MACA,KAAAoB,UAAA;IACA;IACAA,WAAA;MACA,KAAAtB,SAAA;MACA,KAAAE,QAAA;QACAiB,EAAA;QACAhB,SAAA;QACAC,QAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACA,KAAAiB,eAAA;IACA;IACAA,gBAAA;MACA,KAAAhB,UAAA;QACAC,KAAA;QACAC,KAAA;QACAJ,KAAA;QACAC,QAAA;MACA;IACA;IACAkB,4BAAA;MACAC,YAAA,CAAAC,OAAA,cAAAC,IAAA,CAAAC,SAAA,MAAA3B,SAAA;IACA;IACAU,kCAAA;MACA,MAAAkB,cAAA,GAAAJ,YAAA,CAAAK,OAAA;MACA,IAAAD,cAAA;QACA,KAAA5B,SAAA,GAAA0B,IAAA,CAAAI,KAAA,CAAAF,cAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}