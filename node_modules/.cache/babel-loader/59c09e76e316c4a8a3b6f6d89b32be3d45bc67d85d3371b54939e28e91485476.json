{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst tasksModule = {\n  state: {\n    historyItems: JSON.parse(localStorage.getItem('historyItems')) || [],\n    taskItems: JSON.parse(localStorage.getItem('taskItems')) || [],\n    tasksExisted: (JSON.parse(localStorage.getItem('taskItems')) || []).length == 0 ? false : true\n  },\n  getters: {\n    tasksExisted(state) {\n      return state.tasksExisted;\n    },\n    taskItems(state) {\n      return state.taskItems;\n    },\n    historyItems(state) {\n      return state.historyItems;\n    }\n  },\n  mutations: {\n    addTaskToLocal(state, event) {\n      console.log(event);\n      console.log(\"this is event contents\");\n      state.taskItems.push({\n        id: state.taskItems.length + 1,\n        ...event\n      });\n    },\n    saveTaskToStorage(state) {\n      localStorage.setItem('taskItems', JSON.stringify(state.taskItems));\n    },\n    updateHistoryForAddingTask(state, event) {\n      let newDate = new Date(Date.now()).toDateString();\n      state.historyItems.push({\n        id: state.historyItems.length + 1,\n        details: `You added the Task :${{\n          ...event\n        }.name}`,\n        Time: newDate\n      });\n      localStorage.setItem('historyItems', JSON.stringify(state.historyItems));\n    },\n    updateTaskInLocal(state, event) {\n      if ({\n        ...event\n      }.id - 1 < state.taskItems.length && {\n        ...event\n      }.id - 1 >= 0) {\n        if ({\n          ...event\n        }.name != \"\") state.taskItems[{\n          ...event\n        }.id - 1].name = {\n          ...event\n        }.name;\n        if ({\n          ...event\n        }.description != \"\") state.taskItems[{\n          ...event\n        }.id - 1].description = {\n          ...event\n        }.description;\n        if ({\n          ...event\n        }.duration != \"\") state.taskItems[{\n          ...event\n        }.id - 1].duration = {\n          ...event\n        }.duration;\n        if ({\n          ...event\n        }.difficulty != \"\") state.taskItems[{\n          ...event\n        }.id - 1].difficulty = {\n          ...event\n        }.difficulty;\n        if ({\n          ...event\n        }.startDate != \"\") state.taskItems[{\n          ...event\n        }.id - 1].startDate = {\n          ...event\n        }.startDate;\n        if ({\n          ...event\n        }.endDate != \"\") state.taskItems[{\n          ...event\n        }.id - 1].endDate = {\n          ...event\n        }.endDate;\n        //updating history \n        state.historyItems.push({\n          id: state.historyItems.length + 1,\n          details: `You have updated the Task :${{\n            ...event\n          }.name}`\n        });\n      } else {\n        alert(\"you entered a bad id\");\n      }\n    },\n    updateTaskInStorage() {},\n    updateHistoryForUpdatingTask() {},\n    reloadPage() {\n      window.location.reload();\n    },\n    // },\n    updateTask(state, event) {\n\n      //       localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\n      //      }\n      //     \n      // },\n      // deleteTask(state,event)\n      // {\n      //   console.log({...event}.id);\n      //   if((({...event}.id)<state.taskItems.length)&&(({...event}.id)>=0 ))\n      //     {\n      //         //updating history\n      //     state.historyItems.push({id:state.historyItems.length+1,\n      //     details:`You have deleted the Task :${state.taskItems[{...event}.id].name} `}) \n      //       state.taskItems=state.taskItems.slice(0,{...event}.id).concat(state.taskItems.slice({...event}.id+1,this.taskItems.length));\n      //       state.taskItems.filter((el) => el.id>{...event}.id).map((el) => el.id--);\n      //       localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\n      //       if({...event}.id==0)\n      //       this.reloadPage();\n      //     }\n      //   else\n      //     {\n      //       alert(\"you entered a bad id\")\n      //     }\n      // }\n    }\n  },\n  //actions\n  actions: {\n    addTask(context, event) {\n      //saveToLocal\n      context.commit('addTaskToLocal', event);\n      //saveToStorage\n      context.commit('saveTaskToStorage');\n      //updateHistoryForAddingTask\n      context.commit('updateHistoryForAddingTask', event);\n    },\n    updateTask(context, event) {\n      //saveToLocal\n      context.commit('updateTaskInLocal', event);\n      //saveToStorage\n      context.commit('updateTaskInStorage');\n      //updateHistoryForUpdatingTask\n      context.commit('updateHistoryForUpdatingTask');\n    }\n  }\n};\nexport default tasksModule;","map":{"version":3,"names":["tasksModule","state","historyItems","JSON","parse","localStorage","getItem","taskItems","tasksExisted","length","getters","mutations","addTaskToLocal","event","console","log","push","id","saveTaskToStorage","setItem","stringify","updateHistoryForAddingTask","newDate","Date","now","toDateString","details","name","Time","updateTaskInLocal","description","duration","difficulty","startDate","endDate","alert","updateTaskInStorage","updateHistoryForUpdatingTask","reloadPage","window","location","reload","updateTask","actions","addTask","context","commit"],"sources":["C:/Users/DELL/Desktop/FrontEndDeveloper/Vue/VueProjects/task-project-darrbeni/src/store/Modules/tasksModule.js"],"sourcesContent":["const tasksModule={\r\n    state: {\r\n      historyItems:JSON.parse(localStorage.getItem('historyItems'))||[],\r\n      taskItems:JSON.parse(localStorage.getItem('taskItems'))||[],\r\n      tasksExisted:(JSON.parse(localStorage.getItem('taskItems'))||[]).length==0 ? false:true\r\n    },\r\n    getters: {\r\n      tasksExisted(state)\r\n        {\r\n          return state.tasksExisted;\r\n        },\r\n      taskItems(state)\r\n        {\r\n          return state.taskItems;\r\n        },\r\n      historyItems(state)\r\n      {\r\n        return state.historyItems;\r\n      }\r\n    },\r\n    mutations: {\r\n      addTaskToLocal(state,event){\r\n        console.log(event);\r\n        console.log(\"this is event contents\");\r\n        state.taskItems.push({ id: state.taskItems.length + 1, ...event });\r\n      },\r\n      saveTaskToStorage(state){\r\n          localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\r\n       },\r\n      updateHistoryForAddingTask(state,event){\r\n        let newDate=new Date(Date.now()).toDateString();\r\n        state.historyItems.push({id:state.historyItems.length+1,\r\n          details:`You added the Task :${{...event}.name}`,\r\n          Time:newDate})\r\n          localStorage.setItem('historyItems',JSON.stringify(state.historyItems));        \r\n      },\r\n      updateTaskInLocal(state,event){\r\n          if((({...event}.id-1)<state.taskItems.length)&&(({...event}.id-1)>=0 ))\r\n                {\r\n                  if ({...event}.name!=\"\")\r\n                    state.taskItems[{...event}.id-1].name={...event}.name;\r\n                  if ({...event}.description!=\"\")\r\n                    state.taskItems[{...event}.id-1].description={...event}.description;\r\n                  if ({...event}.duration!=\"\")\r\n                    state.taskItems[{...event}.id-1].duration={...event}.duration;\r\n                  if ({...event}.difficulty!=\"\")\r\n                    state.taskItems[{...event}.id-1].difficulty={...event}.difficulty;\r\n                  if ({...event}.startDate!=\"\")\r\n                  state.taskItems[{...event}.id-1].startDate={...event}.startDate;\r\n                  if ({...event}.endDate!=\"\")\r\n                  state.taskItems[{...event}.id-1].endDate={ ...event }.endDate;\r\n                  //updating history \r\n                  state.historyItems.push({id:state.historyItems.length+1,\r\n                  details:`You have updated the Task :${{...event}.name}`})\r\n                } \r\n                else\r\n                {\r\n                  alert(\"you entered a bad id\")\r\n                }\r\n      }\r\n      ,\r\n      updateTaskInStorage(){\r\n\r\n      }\r\n      ,\r\n      updateHistoryForUpdatingTask()\r\n      {\r\n\r\n      }\r\n      ,\r\n      reloadPage()\r\n      {\r\n        window.location.reload()\r\n      },\r\n      // },\r\n       updateTask(state,event){\r\n      \r\n      //       localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\r\n      //      }\r\n      //     \r\n      // },\r\n      // deleteTask(state,event)\r\n      // {\r\n      //   console.log({...event}.id);\r\n      //   if((({...event}.id)<state.taskItems.length)&&(({...event}.id)>=0 ))\r\n      //     {\r\n      //         //updating history\r\n      //     state.historyItems.push({id:state.historyItems.length+1,\r\n      //     details:`You have deleted the Task :${state.taskItems[{...event}.id].name} `}) \r\n      //       state.taskItems=state.taskItems.slice(0,{...event}.id).concat(state.taskItems.slice({...event}.id+1,this.taskItems.length));\r\n      //       state.taskItems.filter((el) => el.id>{...event}.id).map((el) => el.id--);\r\n      //       localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\r\n      //       if({...event}.id==0)\r\n      //       this.reloadPage();\r\n      //     }\r\n      //   else\r\n      //     {\r\n      //       alert(\"you entered a bad id\")\r\n      //     }\r\n      // }\r\n    }},\r\n//actions\r\n    actions: {\r\n      addTask(context,event)\r\n      {\r\n         //saveToLocal\r\n       context.commit('addTaskToLocal',event);\r\n        //saveToStorage\r\n        context.commit('saveTaskToStorage');\r\n        //updateHistoryForAddingTask\r\n        context.commit('updateHistoryForAddingTask',event)\r\n      },\r\n      updateTask(context,event)\r\n      {\r\n        //saveToLocal\r\n        context.commit('updateTaskInLocal',event);\r\n        //saveToStorage\r\n        context.commit('updateTaskInStorage');\r\n        //updateHistoryForUpdatingTask\r\n        context.commit('updateHistoryForUpdatingTask')\r\n      }\r\n    }\r\n  }\r\nexport default tasksModule\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}