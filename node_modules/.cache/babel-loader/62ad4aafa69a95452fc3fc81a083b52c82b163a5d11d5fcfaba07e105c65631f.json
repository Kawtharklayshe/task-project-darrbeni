{"ast":null,"code":"import TaskAddingFeature from '@/components/TaskComponents/TaskAddingFeature.vue';\nimport TaskUpdatingFeature from '@/components/TaskComponents/TaskUpdatingFeature.vue';\nexport default {\n  components: {\n    TaskAddingFeature,\n    TaskUpdatingFeature\n  },\n  data() {\n    return {\n      taskItems: JSON.parse(localStorage.getItem('taskItems')) || []\n    };\n  },\n  watch: {\n    taskItems() {\n      localStorage.setItem('taskItems', JSON.stringify(this.taskItems));\n    }\n  },\n  computed: {\n    tasksExisted() {\n      if ((JSON.parse(localStorage.getItem('taskItems')) || []).length == 0) return false;else return true;\n    }\n  },\n  //This Method is used for reloding the page so we can get the data displayed\n  methods: {\n    saveItem(element) {\n      taskItems[1] = {};\n      localStorage.setItem('taskItems', JSON.stringify(taskItems));\n    },\n    reloadPage() {\n      window.location.reload();\n    }\n  }\n};","map":{"version":3,"names":["TaskAddingFeature","TaskUpdatingFeature","components","data","taskItems","JSON","parse","localStorage","getItem","watch","setItem","stringify","computed","tasksExisted","length","methods","saveItem","element","reloadPage","window","location","reload"],"sources":["src/views/Task/TaskPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n<!-- Adding the adding task feature component to the page  -->\r\n<!-- إضافة المكون  *  ميزة إضافة موظف  * إلى الصفحة  -->\r\n      <task-adding-feature\r\n        @addingTask=\"\r\n         {taskItems.push({ id: taskItems.length + 1, ...$event }),reloadPage()}\">\r\n      </task-adding-feature>\r\n\r\n      \r\n      <task-updating-feature\r\n      @updatingTask=\"\r\n       {saveItem(...$event ),reloadPage()}\">\r\n    </task-updating-feature>\r\n    \r\n      \r\n\r\n<!-- Adding the task list component to the page  -->\r\n<!-- إضافة المكون  *  جدول المهام  * إلى الصفحة  -->\r\n    <data-table :itemsList=\"taskItems\"></data-table>\r\n    </div>\r\n  </template>\r\n  <script lang=\"js\">\r\n  import TaskAddingFeature from '@/components/TaskComponents/TaskAddingFeature.vue';\r\n  import TaskUpdatingFeature from '@/components/TaskComponents/TaskUpdatingFeature.vue';\r\n\r\n  export default {\r\n      components:{\r\n        TaskAddingFeature,\r\n        TaskUpdatingFeature\r\n      },\r\n      data(){\r\n        return {\r\n          taskItems:JSON.parse(localStorage.getItem('taskItems'))||[]\r\n      }},\r\n          watch:{\r\n           taskItems(){\r\n              localStorage.setItem('taskItems',JSON.stringify(this.taskItems))\r\n           }\r\n      }\r\n      ,\r\n      computed:{\r\n        tasksExisted()\r\n        {\r\n          if((JSON.parse(localStorage.getItem('taskItems'))||[]).length==0) return false;\r\n        else return true;\r\n      }},\r\n//This Method is used for reloding the page so we can get the data displayed\r\n      methods:{\r\n        saveItem(element){\r\n          taskItems[1]={}\r\n          localStorage.setItem('taskItems',JSON.stringify(taskItems))\r\n        },\r\n          reloadPage()\r\n          {\r\n              window.location.reload();\r\n          }\r\n        }\r\n  }\r\n  </script>\r\n  "],"mappings":"AAuBA,OAAAA,iBAAA;AACA,OAAAC,mBAAA;AAEA;EACAC,UAAA;IACAF,iBAAA;IACAC;EACA;EACAE,KAAA;IACA;MACAC,SAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EAAA;EACAC,KAAA;IACAL,UAAA;MACAG,YAAA,CAAAG,OAAA,cAAAL,IAAA,CAAAM,SAAA,MAAAP,SAAA;IACA;EACA;EAEAQ,QAAA;IACAC,aAAA,EACA;MACA,KAAAR,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,sBAAAM,MAAA,yBACA;IACA;EAAA;EACA;EACAC,OAAA;IACAC,SAAAC,OAAA;MACAb,SAAA;MACAG,YAAA,CAAAG,OAAA,cAAAL,IAAA,CAAAM,SAAA,CAAAP,SAAA;IACA;IACAc,WAAA,EACA;MACAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}