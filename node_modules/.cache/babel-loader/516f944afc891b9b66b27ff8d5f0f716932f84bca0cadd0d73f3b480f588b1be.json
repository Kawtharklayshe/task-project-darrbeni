{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst tasksModule = {\n  state: {\n    historyItems: JSON.parse(localStorage.getItem('historyItems')) || [],\n    taskItems: JSON.parse(localStorage.getItem('taskItems')) || [],\n    tasksExisted: (JSON.parse(localStorage.getItem('taskItems')) || []).length == 0 ? false : true\n  },\n  getters: {\n    tasksExisted(state) {\n      return state.tasksExisted;\n    },\n    taskItems(state) {\n      return state.taskItems;\n    },\n    historyItems(state) {\n      return state.historyItems;\n    }\n  },\n  mutations: {\n    saveTaskToStorage(state) {\n      localStorage.setItem('taskItems', JSON.stringify(state.taskItems));\n    },\n    // deleteTaskFromStorage(){\n\n    // },\n    // updateTaskInStorage()\n    // {\n\n    // },\n    addTaskToLocalStorage(state, event) {\n      console.log(event);\n      console.log(\"this is event contents\");\n      state.taskItems.push({\n        id: state.taskItems.length + 1,\n        ...event\n      });\n    },\n    updateHistoryForAddingTask() {\n      state.historyItems.push({\n        id: state.historyItems.length + 1,\n        details: `You added the Task :${{\n          ...event\n        }.name}`\n      });\n    },\n    reloadPage() {\n      window.location.reload();\n    }\n    // },\n    //   updateTask(state,event){\n    //     if((({...event}.id-1)<state.taskItems.length)&&(({...event}.id-1)>=0 ))\n    //     {\n    //       if ({...event}.name!=\"\")\n    //         state.taskItems[{...event}.id-1].name={...event}.name;\n    //       if ({...event}.description!=\"\")\n    //         state.taskItems[{...event}.id-1].description={...event}.description;\n    //       if ({...event}.duration!=\"\")\n    //         state.taskItems[{...event}.id-1].duration={...event}.duration;\n    //       if ({...event}.difficulty!=\"\")\n    //         state.taskItems[{...event}.id-1].difficulty={...event}.difficulty;\n    //       if ({...event}.startDate!=\"\")\n    //        state.taskItems[{...event}.id-1].startDate={...event}.startDate;\n    //       if ({...event}.endDate!=\"\")\n    //        state.taskItems[{...event}.id-1].endDate={ ...event }.endDate;\n    //        //updating history \n    //        state.historyItems.push({id:state.historyItems.length+1,\n    //       details:`You have updated the Task :${{...event}.name}`}) \n    //       localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\n    //      }\n    //     else\n    //     {\n    //       alert(\"you entered a bad id\")\n    //     }\n    // },\n    // deleteTask(state,event)\n    // {\n    //   console.log({...event}.id);\n    //   if((({...event}.id)<state.taskItems.length)&&(({...event}.id)>=0 ))\n    //     {\n    //         //updating history\n    //     state.historyItems.push({id:state.historyItems.length+1,\n    //     details:`You have deleted the Task :${state.taskItems[{...event}.id].name} `}) \n    //       state.taskItems=state.taskItems.slice(0,{...event}.id).concat(state.taskItems.slice({...event}.id+1,this.taskItems.length));\n    //       state.taskItems.filter((el) => el.id>{...event}.id).map((el) => el.id--);\n    //       localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\n    //       if({...event}.id==0)\n    //       this.reloadPage();\n    //     }\n    //   else\n    //     {\n    //       alert(\"you entered a bad id\")\n    //     }\n    // }\n  },\n\n  //actions\n  actions: {\n    addTask(context, event) {\n      console.log(event);\n      console.log(\"this is from actoin\");\n      //saveToLocal\n      context.commit('addTaskToLocalStorage', event);\n      co;\n      //ifEmptyReload\n      if (state.taskItems.length == 1) context.commit('reloadPage');\n      //saveToStorage\n      context.commit('saveTaskToStorage');\n      //updateHistoryForAddingTask\n      context.commit('updateHistoryForAddingTask');\n    }\n  }\n};\nexport default tasksModule;","map":{"version":3,"names":["tasksModule","state","historyItems","JSON","parse","localStorage","getItem","taskItems","tasksExisted","length","getters","mutations","saveTaskToStorage","setItem","stringify","addTaskToLocalStorage","event","console","log","push","id","updateHistoryForAddingTask","details","name","reloadPage","window","location","reload","actions","addTask","context","commit","co"],"sources":["C:/Users/DELL/Desktop/FrontEndDeveloper/Vue/VueProjects/task-project-darrbeni/src/store/Modules/tasksModule.js"],"sourcesContent":["const tasksModule={\r\n    state: {\r\n      historyItems:JSON.parse(localStorage.getItem('historyItems'))||[],\r\n      taskItems:JSON.parse(localStorage.getItem('taskItems'))||[],\r\n      tasksExisted:(JSON.parse(localStorage.getItem('taskItems'))||[]).length==0 ? false:true\r\n    },\r\n    getters: {\r\n      tasksExisted(state)\r\n        {\r\n          return state.tasksExisted;\r\n        },\r\n      taskItems(state)\r\n        {\r\n          return state.taskItems;\r\n        },\r\n      historyItems(state)\r\n      {\r\n        return state.historyItems;\r\n      }\r\n    },\r\n    mutations: {\r\n      saveTaskToStorage(state){\r\n          localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\r\n       },\r\n      // deleteTaskFromStorage(){\r\n\r\n      // },\r\n      // updateTaskInStorage()\r\n      // {\r\n\r\n      // },\r\n      addTaskToLocalStorage(state,event){\r\n        console.log(event);\r\n        console.log(\"this is event contents\");\r\n        state.taskItems.push({ id: state.taskItems.length + 1, ...event });\r\n      },\r\n      updateHistoryForAddingTask(){\r\n        state.historyItems.push({id:state.historyItems.length+1,\r\n          details:`You added the Task :${{...event}.name}`})\r\n      },\r\n      reloadPage()\r\n      {\r\n        window.location.reload()\r\n      },\r\n      // },\r\n      //   updateTask(state,event){\r\n      //     if((({...event}.id-1)<state.taskItems.length)&&(({...event}.id-1)>=0 ))\r\n      //     {\r\n      //       if ({...event}.name!=\"\")\r\n      //         state.taskItems[{...event}.id-1].name={...event}.name;\r\n      //       if ({...event}.description!=\"\")\r\n      //         state.taskItems[{...event}.id-1].description={...event}.description;\r\n      //       if ({...event}.duration!=\"\")\r\n      //         state.taskItems[{...event}.id-1].duration={...event}.duration;\r\n      //       if ({...event}.difficulty!=\"\")\r\n      //         state.taskItems[{...event}.id-1].difficulty={...event}.difficulty;\r\n      //       if ({...event}.startDate!=\"\")\r\n      //        state.taskItems[{...event}.id-1].startDate={...event}.startDate;\r\n      //       if ({...event}.endDate!=\"\")\r\n      //        state.taskItems[{...event}.id-1].endDate={ ...event }.endDate;\r\n      //        //updating history \r\n      //        state.historyItems.push({id:state.historyItems.length+1,\r\n      //       details:`You have updated the Task :${{...event}.name}`}) \r\n      //       localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\r\n      //      }\r\n      //     else\r\n      //     {\r\n      //       alert(\"you entered a bad id\")\r\n      //     }\r\n      // },\r\n      // deleteTask(state,event)\r\n      // {\r\n      //   console.log({...event}.id);\r\n      //   if((({...event}.id)<state.taskItems.length)&&(({...event}.id)>=0 ))\r\n      //     {\r\n      //         //updating history\r\n      //     state.historyItems.push({id:state.historyItems.length+1,\r\n      //     details:`You have deleted the Task :${state.taskItems[{...event}.id].name} `}) \r\n      //       state.taskItems=state.taskItems.slice(0,{...event}.id).concat(state.taskItems.slice({...event}.id+1,this.taskItems.length));\r\n      //       state.taskItems.filter((el) => el.id>{...event}.id).map((el) => el.id--);\r\n      //       localStorage.setItem('taskItems',JSON.stringify(state.taskItems));\r\n      //       if({...event}.id==0)\r\n      //       this.reloadPage();\r\n      //     }\r\n      //   else\r\n      //     {\r\n      //       alert(\"you entered a bad id\")\r\n      //     }\r\n      // }\r\n    },\r\n//actions\r\n    actions: {\r\n      addTask(context,event)\r\n      {\r\n        console.log(event);\r\n        console.log(\"this is from actoin\")\r\n         //saveToLocal\r\n       context.commit('addTaskToLocalStorage',event);\r\n       co\r\n         //ifEmptyReload\r\n       if(state.taskItems.length==1)\r\n            context.commit('reloadPage');\r\n        //saveToStorage\r\n        context.commit('saveTaskToStorage');\r\n        //updateHistoryForAddingTask\r\n        context.commit('updateHistoryForAddingTask')\r\n      }\r\n    },\r\n  }\r\nexport default tasksModule\r\n"],"mappings":";AAAA,MAAMA,WAAW,GAAC;EACdC,KAAK,EAAE;IACLC,YAAY,EAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAE,EAAE;IACjEC,SAAS,EAACJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAE,EAAE;IAC3DE,YAAY,EAAC,CAACL,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAE,EAAE,EAAEG,MAAM,IAAE,CAAC,GAAG,KAAK,GAAC;EACrF,CAAC;EACDC,OAAO,EAAE;IACPF,YAAYA,CAACP,KAAK,EAChB;MACE,OAAOA,KAAK,CAACO,YAAY;IAC3B,CAAC;IACHD,SAASA,CAACN,KAAK,EACb;MACE,OAAOA,KAAK,CAACM,SAAS;IACxB,CAAC;IACHL,YAAYA,CAACD,KAAK,EAClB;MACE,OAAOA,KAAK,CAACC,YAAY;IAC3B;EACF,CAAC;EACDS,SAAS,EAAE;IACTC,iBAAiBA,CAACX,KAAK,EAAC;MACpBI,YAAY,CAACQ,OAAO,CAAC,WAAW,EAACV,IAAI,CAACW,SAAS,CAACb,KAAK,CAACM,SAAS,CAAC,CAAC;IACpE,CAAC;IACF;;IAEA;IACA;IACA;;IAEA;IACAQ,qBAAqBA,CAACd,KAAK,EAACe,KAAK,EAAC;MAChCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCjB,KAAK,CAACM,SAAS,CAACY,IAAI,CAAC;QAAEC,EAAE,EAAEnB,KAAK,CAACM,SAAS,CAACE,MAAM,GAAG,CAAC;QAAE,GAAGO;MAAM,CAAC,CAAC;IACpE,CAAC;IACDK,0BAA0BA,CAAA,EAAE;MAC1BpB,KAAK,CAACC,YAAY,CAACiB,IAAI,CAAC;QAACC,EAAE,EAACnB,KAAK,CAACC,YAAY,CAACO,MAAM,GAAC,CAAC;QACrDa,OAAO,EAAE,uBAAsB;UAAC,GAAGN;QAAK,CAAC,CAACO,IAAK;MAAC,CAAC,CAAC;IACtD,CAAC;IACDC,UAAUA,CAAA,EACV;MACEC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EACL;EACIC,OAAO,EAAE;IACPC,OAAOA,CAACC,OAAO,EAACd,KAAK,EACrB;MACEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACjC;MACFY,OAAO,CAACC,MAAM,CAAC,uBAAuB,EAACf,KAAK,CAAC;MAC7CgB,EAAE;MACA;MACF,IAAG/B,KAAK,CAACM,SAAS,CAACE,MAAM,IAAE,CAAC,EACvBqB,OAAO,CAACC,MAAM,CAAC,YAAY,CAAC;MAChC;MACAD,OAAO,CAACC,MAAM,CAAC,mBAAmB,CAAC;MACnC;MACAD,OAAO,CAACC,MAAM,CAAC,4BAA4B,CAAC;IAC9C;EACF;AACF,CAAC;AACH,eAAe/B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}