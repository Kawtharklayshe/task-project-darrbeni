{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst assignmentsModule = {\n  state: {\n    historyItems: JSON.parse(localStorage.getItem('historyItems')) || [],\n    assignmentItems: JSON.parse(localStorage.getItem('assignmentItems')) || [],\n    employeeItems: JSON.parse(localStorage.getItem('employeeItems')) || [],\n    assignmentItems: JSON.parse(localStorage.getItem('assignmentItems')) || [],\n    assignmentsExisted: (JSON.parse(localStorage.getItem('assignmentItems')) || []).length == 0 ? false : true\n  },\n  getters: {\n    assignmentExisted(state) {\n      return state.assignmentsExisted;\n    },\n    assignmentItems(state) {\n      return state.assignmentItems;\n    },\n    taskItems(state) {\n      return state.taskItems;\n    },\n    employeeItems(state) {\n      return state.employeeItems;\n    },\n    historyItems(state) {\n      return state.historyItems;\n    }\n  },\n  mutations: {\n    reloader() {\n      window.location.reload();\n    },\n    /*\r\n    Add Functions \r\n    */\n    addAssignmentToLocal(state, event) {\n      state.assignmentItems.push({\n        id: state.assignmentItems.length + 1,\n        ...event\n      });\n    },\n    saveAssignmentToStorage(state) {\n      localStorage.setItem('assignmentItems', JSON.stringify(state.assignmentItems));\n    },\n    updateHistoryForAddingAssignment(state, event) {\n      let newDate = new Date(Date.now()).toDateString();\n      state.historyItems.push({\n        id: this.historyItems.length + 1,\n        details: `You added a new Assignment with  ${{\n          ...event\n        }.responsible} as a resposible`,\n        Time: newDate\n      });\n      localStorage.setItem('historyItems', JSON.stringify(state.historyItems));\n    },\n    /*\r\n    Update Functions \r\n    */\n    /*\r\n    if((({...$event}.id)<this.assignmentItems.length)&&(({...$event}.id)>=0 ))\r\n         {\r\n           this.assignmentItems=this.assignmentItems.slice(0,{...$event}.id).\r\n           concat(this.assignmentItems.slice({...$event}.id+1,this.assignmentItems.length));\r\n           this.assignmentItems.filter((el) => el.id>{...$event}.id).map((el) => el.id--);\r\n           localStorage.setItem('assignmentItems',JSON.stringify(this.assignmentItems));\r\n           if({...$event}.id==0)\r\n           this.reloadPage();\r\n         }\r\n       else\r\n         {\r\n           alert(\"you entered a bad id\")\r\n         }\r\n    */\n    updateAssignmentInLocal(state, event) {\n      if ({\n        ...event\n      }.responsible != \"\") state.assignmentItems[{\n        ...event\n      }.id - 1].responsible = {\n        ...event\n      }.responsible;\n      if ({\n        ...event\n      }.tasks != \"\") state.assignmentItems[{\n        ...event\n      }.id - 1].tasks = {\n        ...event\n      }.tasks;\n      if ({\n        ...event\n      }.employees != \"\") state.assignmentItems[{\n        ...event\n      }.id - 1].employees = {\n        ...event\n      }.employees;\n    },\n    updateAssignmentInStorage(state) {\n      localStorage.setItem('assignmentItems', JSON.stringify(state.assignmentItems));\n    },\n    updateHistoryForUpdatingAssignment(state, event) {\n      let newDate = new Date(Date.now()).toDateString();\n      this.historyItems.push({\n        id: this.historyItems.length + 1,\n        details: `You have updated an Assignment whose responsible was ${{\n          ...$event\n        }.responsible}`,\n        Time: newDate\n      });\n      localStorage.setItem('historyItems', JSON.stringify(state.historyItems));\n    },\n    /*\r\n    Delete Functions\r\n    */\n    deleteAssignmentInLocal(state, event) {\n      console.log(\"//////\");\n      state.assignmentItems = state.assignmentItems.slice(0, {\n        ...event\n      }.id).concat(state.assignmentItems.slice({\n        ...event\n      }.id + 1, state.assignmentItems.length));\n      state.assignmentItems.filter(el => el.id > {\n        ...event\n      }.id).map(el => el.id--);\n    },\n    deleteAssignmentInStorage(state, event) {\n      localStorage.setItem('assignmentItems', JSON.stringify(state.assignmentItems));\n    },\n    deleteHistoryForDeleteAssignment(state, event) {\n      state.historyItems.push({\n        id: state.historyItems.length + 1,\n        details: `You have deleted the Assignment :${state.assignmentItems[{\n          ...event\n        }.id].name} `\n      });\n    }\n  },\n  //actions\n  actions: {\n    addAssignment(context, event) {\n      //saveToLocal\n      context.commit('addAssignmentToLocal', event);\n      //saveToStorage\n      context.commit('saveAssignmentToStorage');\n      //updateHistory\n      context.commit('updateHistoryForAddingAssignment', event);\n    },\n    updateAssignment(context, event) {\n      //saveToLocal\n      context.commit('updateAssignmentInLocal', event);\n      //saveToStorage\n      context.commit('updateAssignmentInStorage');\n      //updateHistoryFor\n      context.commit('updateHistoryForUpdatingAssignment', event);\n    },\n    deleteAssignment({\n      commit,\n      state\n    }, event) {\n      console.log(\"???\");\n      console.log(state);\n      if ({\n        ...event\n      }.id < state.assignmentItems.length && {\n        ...event\n      }.id >= 0) {\n        //saveToLocal\n        commit('deleteAssignmnetInLocal', event);\n        //saveToStorage\n        commit('deleteAssignmentInStorage');\n        //updateHistory\n        commit('deleteHistoryForDeleteAssignment', event);\n      } else {\n        alert('You have Entered a bad ID');\n      }\n    }\n  }\n};\nexport default assignmentsModule;","map":{"version":3,"names":["assignmentsModule","state","historyItems","JSON","parse","localStorage","getItem","assignmentItems","employeeItems","assignmentsExisted","length","getters","assignmentExisted","taskItems","mutations","reloader","window","location","reload","addAssignmentToLocal","event","push","id","saveAssignmentToStorage","setItem","stringify","updateHistoryForAddingAssignment","newDate","Date","now","toDateString","details","responsible","Time","updateAssignmentInLocal","tasks","employees","updateAssignmentInStorage","updateHistoryForUpdatingAssignment","$event","deleteAssignmentInLocal","console","log","slice","concat","filter","el","map","deleteAssignmentInStorage","deleteHistoryForDeleteAssignment","name","actions","addAssignment","context","commit","updateAssignment","deleteAssignment","alert"],"sources":["C:/Users/DELL/Desktop/FrontEndDeveloper/Vue/VueProjects/task-project-darrbeni/src/store/Modules/assignmentModule.js"],"sourcesContent":["const assignmentsModule={\r\n    state: {\r\n      historyItems:JSON.parse(localStorage.getItem('historyItems'))||[],\r\n      assignmentItems:JSON.parse(localStorage.getItem('assignmentItems'))||[],\r\n      employeeItems:JSON.parse(localStorage.getItem('employeeItems'))||[],\r\n      assignmentItems:JSON.parse(localStorage.getItem('assignmentItems'))||[],\r\n      assignmentsExisted:(JSON.parse(localStorage.getItem('assignmentItems'))||[]).length==0 ? false:true\r\n    },\r\n    getters: {\r\n      assignmentExisted(state)\r\n        {\r\n          return state.assignmentsExisted;\r\n        },\r\n      assignmentItems(state)\r\n        {\r\n          return state.assignmentItems;\r\n        },\r\n        taskItems(state)\r\n        {\r\n          return state.taskItems;\r\n        },\r\n        employeeItems(state)\r\n        {\r\n          return state.employeeItems;\r\n        },\r\n        historyItems(state)\r\n        {\r\n            return state.historyItems;\r\n        }\r\n    },\r\n    mutations: {\r\n        reloader()\r\n        {\r\n          window.location.reload()\r\n        },\r\n      /*\r\n      Add Functions \r\n      */\r\n      addAssignmentToLocal(state,event){\r\n        state.assignmentItems.push({ id: state.assignmentItems.length + 1, ...event });      \r\n    },\r\n      saveAssignmentToStorage(state){\r\n          localStorage.setItem('assignmentItems',JSON.stringify(state.assignmentItems));\r\n       },\r\n      updateHistoryForAddingAssignment(state,event){\r\n        let newDate=new Date(Date.now()).toDateString();\r\n        state.historyItems.push({id:this.historyItems.length+1,\r\n            details:`You added a new Assignment with  ${{...event}.responsible} as a resposible`,Time:newDate})\r\n        localStorage.setItem('historyItems',JSON.stringify(state.historyItems));        \r\n      },\r\n      /*\r\n      Update Functions \r\n      */\r\n     /*\r\n     if((({...$event}.id)<this.assignmentItems.length)&&(({...$event}.id)>=0 ))\r\n          {\r\n            this.assignmentItems=this.assignmentItems.slice(0,{...$event}.id).\r\n            concat(this.assignmentItems.slice({...$event}.id+1,this.assignmentItems.length));\r\n            this.assignmentItems.filter((el) => el.id>{...$event}.id).map((el) => el.id--);\r\n            localStorage.setItem('assignmentItems',JSON.stringify(this.assignmentItems));\r\n            if({...$event}.id==0)\r\n            this.reloadPage();\r\n          }\r\n        else\r\n          {\r\n            alert(\"you entered a bad id\")\r\n          }\r\n     */\r\n      updateAssignmentInLocal(state,event){\r\n        if ({...event}.responsible!=\"\")\r\n            state.assignmentItems[{...event}.id-1].responsible={...event}.responsible;\r\n        if ({...event}.tasks!=\"\")\r\n            state.assignmentItems[{...event}.id-1].tasks={...event}.tasks;\r\n        if ({...event}.employees!=\"\")\r\n            state.assignmentItems[{...event}.id-1].employees={...event}.employees;\r\n    },\r\n      updateAssignmentInStorage(state){\r\n        localStorage.setItem('assignmentItems',JSON.stringify(state.assignmentItems));\r\n      }\r\n      ,\r\n      updateHistoryForUpdatingAssignment(state,event)\r\n      {\r\n         let newDate=new Date(Date.now()).toDateString();  \r\n         this.historyItems.push\r\n         ( {id:this.historyItems.length+1,\r\n          details:`You have updated an Assignment whose responsible was ${{...$event}.responsible}`,Time:newDate}) ;\r\n         localStorage.setItem('historyItems',JSON.stringify(state.historyItems))\r\n      }\r\n      ,\r\n      /*\r\n      Delete Functions\r\n      */\r\n     deleteAssignmentInLocal(state,event)\r\n     {\r\n        console.log(\"//////\")\r\n        state.assignmentItems=state.assignmentItems.slice(0,{...event}.id)\r\n        .concat(state.assignmentItems.slice({...event}.id+1,state.assignmentItems.length));\r\n        state.assignmentItems.filter((el) => el.id>{...event}.id).map((el) => el.id--);\r\n      \r\n     },\r\n     deleteAssignmentInStorage(state,event)\r\n     {\r\n        localStorage.setItem('assignmentItems',JSON.stringify(state.assignmentItems));\r\n     }\r\n     ,\r\n     deleteHistoryForDeleteAssignment(state,event)\r\n     {\r\n      state.historyItems.push({id:state.historyItems.length+1,\r\n        details:`You have deleted the Assignment :${state.assignmentItems[{...event}.id].name} `})\r\n     }\r\n    },\r\n    //actions\r\n    actions: {\r\n      addAssignment(context,event)\r\n      {\r\n        //saveToLocal\r\n       context.commit('addAssignmentToLocal',event);\r\n        //saveToStorage\r\n        context.commit('saveAssignmentToStorage');\r\n        //updateHistory\r\n        context.commit('updateHistoryForAddingAssignment',event)\r\n      },\r\n      updateAssignment(context,event)\r\n      {\r\n        //saveToLocal\r\n        context.commit('updateAssignmentInLocal',event);\r\n        //saveToStorage\r\n        context.commit('updateAssignmentInStorage');\r\n        //updateHistoryFor\r\n        context.commit('updateHistoryForUpdatingAssignment',event)\r\n      },\r\n      deleteAssignment({commit,state},event){\r\n        console.log(\"???\")\r\n        console.log(state);\r\n        if((({...event}.id)<state.assignmentItems.length)&&(({...event}.id)>=0 ))\r\n        {\r\n          //saveToLocal\r\n        commit('deleteAssignmnetInLocal',event);\r\n        //saveToStorage\r\n        commit('deleteAssignmentInStorage');\r\n        //updateHistory\r\n       commit('deleteHistoryForDeleteAssignment',event);\r\n        }\r\n       else \r\n       {\r\n        alert('You have Entered a bad ID')\r\n       }\r\n      }\r\n    }\r\n\r\n}\r\nexport default assignmentsModule\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}