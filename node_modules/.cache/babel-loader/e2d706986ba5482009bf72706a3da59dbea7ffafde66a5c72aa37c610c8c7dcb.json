{"ast":null,"code":"import TaskAddingFeature from '@/components/TaskComponents/TaskAddingFeature.vue';\nimport TaskList from '@/components/GeneralComponents/DataTable.vue';\nexport default {\n  components: {\n    TaskList,\n    TaskAddingFeature\n  },\n  data() {\n    return {\n      taskItems: JSON.parse(localStorage.getItem('taskItems')) || []\n    };\n  },\n  // Always compute the value of taskItems to send to da\n  computed: {\n    taskItems() {\n      return JSON.parse(localStorage.getItem('taskItems')) || [];\n    }\n  },\n  // When changing => send to localStorage\n  watch: {\n    taskItems() {\n      localStorage.setItem('taskItems', JSON.stringify(this.taskItems));\n    }\n  },\n  //This Method is used for \n  methods: {\n    reloadPage() {\n      window.location.reload();\n    }\n  }\n};","map":{"version":3,"names":["TaskAddingFeature","TaskList","components","data","taskItems","JSON","parse","localStorage","getItem","computed","watch","setItem","stringify","methods","reloadPage","window","location","reload"],"sources":["src/views/Task/TaskPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <!-- Adding the adding task feature component to the page  -->\r\n      <!-- إضافة المكون  *  ميزة إضافة موظف  * إلى الصفحة  -->\r\n      <task-adding-feature\r\n        @addingTask=\"\r\n         {taskItems.push({ id: taskItems.length + 1, ...$event }),reloadPage()}\">\r\n      </task-adding-feature>\r\n\r\n<!-- Adding the task list component to the page  -->\r\n<!-- إضافة المكون  *  جدول المهام  * إلى الصفحة  -->\r\n   <task-list :itemsList=\"taskItems\"></task-list>\r\n    </div>\r\n  </template>\r\n  <script lang=\"js\">\r\n  import TaskAddingFeature from '@/components/TaskComponents/TaskAddingFeature.vue';\r\n  import TaskList from '@/components/GeneralComponents/DataTable.vue';\r\n  export default {\r\n      components:{\r\n        TaskList,TaskAddingFeature\r\n      },\r\n      data(){\r\n        return {\r\n          taskItems:JSON.parse(localStorage.getItem('taskItems'))||[]\r\n      }},\r\n// Always compute the value of taskItems to send to da\r\n      computed:{\r\n          taskItems(){ return JSON.parse(localStorage.getItem('taskItems'))||[]}},\r\n// When changing => send to localStorage\r\n          watch:{\r\n           taskItems(){\r\n              localStorage.setItem('taskItems',JSON.stringify(this.taskItems))\r\n           }\r\n      },\r\n//This Method is used for \r\n      methods:{\r\n          reloadPage()\r\n          {\r\n              window.location.reload();\r\n          }\r\n      }\r\n  }\r\n  </script>\r\n  "],"mappings":"AAeA,OAAAA,iBAAA;AACA,OAAAC,QAAA;AACA;EACAC,UAAA;IACAD,QAAA;IAAAD;EACA;EACAG,KAAA;IACA;MACAC,SAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EAAA;EACA;EACAC,QAAA;IACAL,UAAA;MAAA,OAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IAAA;EAAA;EACA;EACAE,KAAA;IACAN,UAAA;MACAG,YAAA,CAAAI,OAAA,cAAAN,IAAA,CAAAO,SAAA,MAAAR,SAAA;IACA;EACA;EACA;EACAS,OAAA;IACAC,WAAA,EACA;MACAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}