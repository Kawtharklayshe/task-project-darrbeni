{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//Components\nimport TaskAddingFeature from '@/components/TaskComponents/TaskAddingFeature.vue';\nimport TaskUpdatingFeature from '@/components/TaskComponents/TaskUpdatingFeature.vue';\nimport TaskDeletingFeature from '@/components/TaskComponents/TaskDeletingFeature.vue';\n//Mixins\nimport Mixin from '@/mixins/mixin';\n//Store\nimport { mapGetters, mapMutations } from 'vuex';\nexport default {\n  mixins: [Mixin],\n  components: {\n    TaskAddingFeature,\n    TaskUpdatingFeature,\n    TaskDeletingFeature\n  },\n  data() {\n    return {\n      taskItems: this.$state.taskItems\n    };\n  },\n  watch: {\n    taskItems() {\n      localStorage.setItem('taskItems', JSON.stringify(this.taskItems));\n    }\n  },\n  computed: {\n    ...mapGetters[('taskItems', 'tasksExisted')],\n    tasksExisted() {\n      if ((JSON.parse(localStorage.getItem('taskItems')) || []).length == 0) return false;else return true;\n    },\n    taskItems() {\n      return JSON.parse(localStorage.getItem('taskItems')) || [];\n    }\n  },\n  methods: {\n    reloadPage() {\n      window.location.reload();\n    },\n    addTask($event) {\n      this.$store.dispatch('addTask', {\n        ...$event\n      });\n    },\n    updateTask($event) {\n      if ({\n        ...$event\n      }.id - 1 < this.taskItems.length && {\n        ...$event\n      }.id - 1 >= 0) {\n        if ({\n          ...$event\n        }.name != \"\") this.taskItems[{\n          ...$event\n        }.id - 1].name = {\n          ...$event\n        }.name;\n        if ({\n          ...$event\n        }.description != \"\") this.taskItems[{\n          ...$event\n        }.id - 1].description = {\n          ...$event\n        }.description;\n        if ({\n          ...$event\n        }.duration != \"\") this.taskItems[{\n          ...$event\n        }.id - 1].duration = {\n          ...$event\n        }.duration;\n        if ({\n          ...$event\n        }.difficulty != \"\") this.taskItems[{\n          ...$event\n        }.id - 1].difficulty = {\n          ...$event\n        }.difficulty;\n        if ({\n          ...$event\n        }.startDate != \"\") this.taskItems[{\n          ...$event\n        }.id - 1].startDate = {\n          ...$event\n        }.startDate;\n        if ({\n          ...$event\n        }.endDate != \"\") this.taskItems[{\n          ...$event\n        }.id - 1].endDate = {\n          ...$event\n        }.endDate;\n        //updating history \n        this.historyItems.push({\n          id: this.historyItems.length + 1,\n          details: `You have updated the Task :${{\n            ...$event\n          }.name}`\n        });\n        localStorage.setItem('taskItems', JSON.stringify(this.taskItems));\n      } else {\n        alert(\"you entered a bad id\");\n      }\n    },\n    deleteTask($event) {\n      console.log({\n        ...$event\n      }.id);\n      if ({\n        ...$event\n      }.id < this.taskItems.length && {\n        ...$event\n      }.id >= 0) {\n        //updating history\n        this.historyItems.push({\n          id: this.historyItems.length + 1,\n          details: `You have deleted the Task :${this.taskItems[{\n            ...$event\n          }.id].name} `\n        });\n        this.taskItems = this.taskItems.slice(0, {\n          ...$event\n        }.id).concat(this.taskItems.slice({\n          ...$event\n        }.id + 1, this.taskItems.length));\n        this.taskItems.filter(el => el.id > {\n          ...$event\n        }.id).map(el => el.id--);\n        localStorage.setItem('taskItems', JSON.stringify(this.taskItems));\n        if ({\n          ...$event\n        }.id == 0) this.reloadPage();\n      } else {\n        alert(\"you entered a bad id\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["TaskAddingFeature","TaskUpdatingFeature","TaskDeletingFeature","Mixin","mapGetters","mapMutations","mixins","components","data","taskItems","$state","watch","localStorage","setItem","JSON","stringify","computed","tasksExisted","parse","getItem","length","methods","reloadPage","window","location","reload","addTask","$event","$store","dispatch","updateTask","id","name","description","duration","difficulty","startDate","endDate","historyItems","push","details","alert","deleteTask","console","log","slice","concat","filter","el","map"],"sources":["src/views/Task/TaskPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <b-container class=\"sticky-top-1\">\r\n      <br/>\r\n      <b-row>\r\n        <b-col cols=\"2\" class=\"feature\">\r\n              <!-- Adding the adding items component to the page  -->\r\n      <!-- إضافة المكون * إضافة العناصر * إلى الصفحة  -->\r\n      <task-adding-feature @addingTask=\"addTask\">\r\n      </task-adding-feature>\r\n        </b-col>\r\n        <b-col cols=\"2\" class=\"feature\">\r\n              <!-- Adding the updating items component to the page  -->\r\n      <!-- إضافة المكون * تعديل العناصر * إلى الصفحة  -->\r\n      <task-updating-feature v-if=\"tasksExisted\" @updatingTask=\"updateTask\"> </task-updating-feature>\r\n        </b-col>\r\n        <b-col cols=\"2\" class=\"feature\">\r\n            <!-- Adding the deleting items component to the page  -->\r\n      <!-- إضافة المكون * حذف العناصر * إلى الصفحة  -->\r\n      <task-deleting-feature v-if=\"tasksExisted\" @deletingTask=\"deleteTask\"> </task-deleting-feature>\r\n     \r\n        </b-col>\r\n      </b-row>\r\n      <b-row>\r\n        <b-col>\r\n          <!-- Adding the items list component to the page  -->\r\n      <!-- إضافة المكون * جدول العناصر * إلى الصفحة  -->\r\n    <data-table :itemsList=\"taskItems\" class=\"data-table\"></data-table>\r\n        </b-col>\r\n      </b-row>\r\n    </b-container>\r\n  </div>\r\n</template>\r\n<script lang=\"js\">\r\n//Components\r\nimport TaskAddingFeature from '@/components/TaskComponents/TaskAddingFeature.vue';\r\nimport TaskUpdatingFeature from '@/components/TaskComponents/TaskUpdatingFeature.vue';\r\nimport TaskDeletingFeature from '@/components/TaskComponents/TaskDeletingFeature.vue';\r\n//Mixins\r\nimport Mixin from '@/mixins/mixin'\r\n//Store\r\nimport { mapGetters,mapMutations } from 'vuex';\r\nexport default {\r\n  mixins:[Mixin],\r\n    components:{\r\n      TaskAddingFeature,\r\n      TaskUpdatingFeature,\r\n      TaskDeletingFeature\r\n    },\r\n    data(){return { \r\n      taskItems:this.$state.taskItems,\r\n     }},\r\n    watch:{\r\n       taskItems(){\r\n         localStorage.setItem('taskItems',JSON.stringify(this.taskItems))\r\n     }\r\n    },\r\n    computed:{\r\n      ...mapGetters['taskItems','tasksExisted'],\r\n      tasksExisted()\r\n      {\r\n        if((JSON.parse(localStorage.getItem('taskItems'))||[]).length==0) return false;\r\n      else return true;\r\n      },\r\n      taskItems(){\r\n        return JSON.parse(localStorage.getItem('taskItems'))||[]\r\n      }\r\n    },\r\n    methods:{\r\n      reloadPage()\r\n      {\r\n        window.location.reload()\r\n      },\r\n      addTask($event)\r\n      {\r\n        this.$store.dispatch('addTask',{...$event})\r\n      },\r\n       updateTask($event){\r\n          if((({...$event}.id-1)<this.taskItems.length)&&(({...$event}.id-1)>=0 ))\r\n          {\r\n            if ({...$event}.name!=\"\")\r\n              this.taskItems[{...$event}.id-1].name={...$event}.name;\r\n            if ({...$event}.description!=\"\")\r\n              this.taskItems[{...$event}.id-1].description={...$event}.description;\r\n            if ({...$event}.duration!=\"\")\r\n              this.taskItems[{...$event}.id-1].duration={...$event}.duration;\r\n            if ({...$event}.difficulty!=\"\")\r\n              this.taskItems[{...$event}.id-1].difficulty={...$event}.difficulty;\r\n            if ({...$event}.startDate!=\"\")\r\n             this.taskItems[{...$event}.id-1].startDate={...$event}.startDate;\r\n            if ({...$event}.endDate!=\"\")\r\n             this.taskItems[{...$event}.id-1].endDate={ ...$event }.endDate;\r\n             //updating history \r\n             this.historyItems.push({id:this.historyItems.length+1,\r\n            details:`You have updated the Task :${{...$event}.name}`}) \r\n            localStorage.setItem('taskItems',JSON.stringify(this.taskItems));\r\n          \r\n          }\r\n          else\r\n          {\r\n            alert(\"you entered a bad id\")\r\n          }\r\n      },\r\n      deleteTask($event)\r\n      {\r\n        console.log({...$event}.id);\r\n        if((({...$event}.id)<this.taskItems.length)&&(({...$event}.id)>=0 ))\r\n          {\r\n          //updating history\r\n          this.historyItems.push({id:this.historyItems.length+1,\r\n          details:`You have deleted the Task :${this.taskItems[{...$event}.id].name} `}) \r\n            this.taskItems=this.taskItems.slice(0,{...$event}.id).concat(this.taskItems.slice({...$event}.id+1,this.taskItems.length));\r\n            this.taskItems.filter((el) => el.id>{...$event}.id).map((el) => el.id--);\r\n            localStorage.setItem('taskItems',JSON.stringify(this.taskItems));\r\n            if({...$event}.id==0)\r\n            this.reloadPage();\r\n          }\r\n        else\r\n          {\r\n            alert(\"you entered a bad id\")\r\n          }\r\n      }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.sticky-top-1\r\n{\r\n  position: sticky;\r\n  top: 100px;\r\n  height: 0px;\r\n}\r\n.feature{\r\n  width: 12%;\r\n  height: 80px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}